
# docker-compose.yml

version: '3'
services:
  postgrest:
    image: postgrest/postgrest
    ports:
      - "3000:3000"
    environment:
      PGRST_DB_URI: postgres://postgres:postgres@postgres:5432/postgres
      PGRST_DB_SCHEMA: public
      PGRST_DB_ANON_ROLE: postgres #In production this role should not be the same as the one used for the connection
      PGRST_SERVER_PROXY_URI: "http://143.244.186.213:3000"
    depends_on:
      - postgres
  postgres:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
        - "5432:5432"
    environment:
      POSTGRES_DB: postgres
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      PGDATA: /var/lib/postgresql/data
    volumes:
        - postgres-data:/var/lib/postgresql/data

  pgadmin:
    container_name: pgadmin4_container
    image: dpage/pgadmin4
    restart: always
    environment:
        PGADMIN_DEFAULT_EMAIL: postgres@pgadmin.com
        PGADMIN_DEFAULT_PASSWORD: postgres
        PGADMIN_LISTEN_PORT: 80
    ports:
        - "5050:80"
    volumes:
        - pgadmin-data:/var/lib/pgadmin

  swagger:
    image: swaggerapi/swagger-ui
    ports:
        - "8080:8080"
    expose:
        - "8080"
    environment:
        API_URL: http://143.244.186.213:3000/

  nginx:
    image: nginx
    restart: unless-stopped
    volumes:
      - ./data/nginx:/etc/nginx/conf.d
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - postgrest
    command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"
    
  certbot:
    image: certbot/certbot
    restart: unless-stopped
    volumes:
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"
volumes:
    postgres-data:
    pgadmin-data:
    letsencrypt: